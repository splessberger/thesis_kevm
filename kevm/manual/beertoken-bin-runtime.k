requires "edsl.md"

module BEERTOKEN-CONTRACT
    imports public EDSL
    
    syntax Contract ::= BeerTokenContract
    
    syntax BeerTokenContract ::= "BeerToken" [symbol(), klabel(contract_BeerToken)]
    
    rule  ( #binRuntime ( BeerToken ) => #parseByteStack ( "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80635a3b7e42116100665780635a3b7e421461014957806370a082311461016757806395d89b4114610197578063a9059cbb146101b5578063be45fd62146101e55761009e565b806306fdde03146100a357806318160ddd146100c1578063313ce567146100df57806340c10f19146100fd57806342966c681461012d575b600080fd5b6100ab610215565b6040516100b89190610c08565b60405180910390f35b6100c96102a7565b6040516100d69190610c43565b60405180910390f35b6100e76102b1565b6040516100f49190610c7a565b60405180910390f35b61011760048036038101906101129190610d29565b6102b6565b6040516101249190610d84565b60405180910390f35b61014760048036038101906101429190610d9f565b61045f565b005b6101516105ad565b60405161015e9190610c08565b60405180910390f35b610181600480360381019061017c9190610dcc565b6105ea565b60405161018e9190610c43565b60405180910390f35b61019f610632565b6040516101ac9190610c08565b60405180910390f35b6101cf60048036038101906101ca9190610d29565b6106c4565b6040516101dc9190610d84565b60405180910390f35b6101ff60048036038101906101fa9190610e5e565b61091d565b60405161020c9190610d84565b60405180910390f35b60606002805461022490610f01565b80601f016020809104026020016040519081016040528092919081815260200182805461025090610f01565b801561029d5780601f106102725761010080835404028352916020019161029d565b820191906000526020600020905b81548152906001019060200180831161028057829003601f168201915b5050505050905090565b6000600154905090565b600090565b60003373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461031257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610381576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037890610f7e565b60405180910390fd5b81600160008282546103939190610fcd565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103e89190610fcd565b925050819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161044d9190610c43565b60405180910390a36001905092915050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90611073565b60405180910390fd5b8181036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816001600082825461053c9190611093565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105a19190610c43565b60405180910390a35050565b60606040518060400160405280600681526020017f6572633232330000000000000000000000000000000000000000000000000000815250905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606003805461064190610f01565b80601f016020809104026020016040519081016040528092919081815260200182805461066d90610f01565b80156106ba5780601f1061068f576101008083540402835291602001916106ba565b820191906000526020600020905b81548152906001019060200180831161069d57829003601f168201915b5050505050905090565b60008060405180604001604052806004815260200160008152509050826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461072a9190611093565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107b69190610fcd565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061080184610b61565b15610876578373ffffffffffffffffffffffffffffffffffffffff16638943ec023385846040518463ffffffff1660e01b81526004016108439392919061112b565b600060405180830381600087803b15801561085d57600080fd5b505af1158015610871573d6000803e3d6000fd5b505050505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516108d39190610c43565b60405180910390a37f3ba9136826ac751de05d770d8d34fa4440ada49a5fb0e9aa1678aece66dad9768160405161090a9190611169565b60405180910390a1600191505092915050565b6000836000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109699190611093565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109f59190610fcd565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a4085610b61565b15610ab7578473ffffffffffffffffffffffffffffffffffffffff16638943ec02338686866040518563ffffffff1660e01b8152600401610a8494939291906111c7565b600060405180830381600087803b158015610a9e57600080fd5b505af1158015610ab2573d6000803e3d6000fd5b505050505b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610b149190610c43565b60405180910390a37f3ba9136826ac751de05d770d8d34fa4440ada49a5fb0e9aa1678aece66dad9768383604051610b4d929190611207565b60405180910390a160019050949350505050565b60008060009050823b905060008111915050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610bb2578082015181840152602081019050610b97565b60008484015250505050565b6000601f19601f8301169050919050565b6000610bda82610b78565b610be48185610b83565b9350610bf4818560208601610b94565b610bfd81610bbe565b840191505092915050565b60006020820190508181036000830152610c228184610bcf565b905092915050565b6000819050919050565b610c3d81610c2a565b82525050565b6000602082019050610c586000830184610c34565b92915050565b600060ff82169050919050565b610c7481610c5e565b82525050565b6000602082019050610c8f6000830184610c6b565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cca82610c9f565b9050919050565b610cda81610cbf565b8114610ce557600080fd5b50565b600081359050610cf781610cd1565b92915050565b610d0681610c2a565b8114610d1157600080fd5b50565b600081359050610d2381610cfd565b92915050565b60008060408385031215610d4057610d3f610c95565b5b6000610d4e85828601610ce8565b9250506020610d5f85828601610d14565b9150509250929050565b60008115159050919050565b610d7e81610d69565b82525050565b6000602082019050610d996000830184610d75565b92915050565b600060208284031215610db557610db4610c95565b5b6000610dc384828501610d14565b91505092915050565b600060208284031215610de257610de1610c95565b5b6000610df084828501610ce8565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e1e57610e1d610df9565b5b8235905067ffffffffffffffff811115610e3b57610e3a610dfe565b5b602083019150836001820283011115610e5757610e56610e03565b5b9250929050565b60008060008060608587031215610e7857610e77610c95565b5b6000610e8687828801610ce8565b9450506020610e9787828801610d14565b935050604085013567ffffffffffffffff811115610eb857610eb7610c9a565b5b610ec487828801610e08565b925092505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f1957607f821691505b602082108103610f2c57610f2b610ed2565b5b50919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000610f68601f83610b83565b9150610f7382610f32565b602082019050919050565b60006020820190508181036000830152610f9781610f5b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fd882610c2a565b9150610fe383610c2a565b9250828201905080821115610ffb57610ffa610f9e565b5b92915050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b600061105d602283610b83565b915061106882611001565b604082019050919050565b6000602082019050818103600083015261108c81611050565b9050919050565b600061109e82610c2a565b91506110a983610c2a565b92508282039050818111156110c1576110c0610f9e565b5b92915050565b6110d081610cbf565b82525050565b600081519050919050565b600082825260208201905092915050565b60006110fd826110d6565b61110781856110e1565b9350611117818560208601610b94565b61112081610bbe565b840191505092915050565b600060608201905061114060008301866110c7565b61114d6020830185610c34565b818103604083015261115f81846110f2565b9050949350505050565b6000602082019050818103600083015261118381846110f2565b905092915050565b82818337600083830152505050565b60006111a683856110e1565b93506111b383858461118b565b6111bc83610bbe565b840190509392505050565b60006060820190506111dc60008301876110c7565b6111e96020830186610c34565b81810360408301526111fc81848661119a565b905095945050505050565b6000602082019050818103600083015261122281848661119a565b9050939250505056fea26469706673582212208c4b1a4551f7e332cda990acc9b0f7385bf28209643dc142478dbfb759abf1b264736f6c63430008130033" ) )
      
    
    syntax Field ::= BeerTokenField
    
    syntax BeerTokenField ::= "_balances" [symbol(), klabel(field_BeerToken__balances)]
    
    syntax BeerTokenField ::= "_totalSupply" [symbol(), klabel(field_BeerToken__totalSupply)]
    
    syntax BeerTokenField ::= "_name" [symbol(), klabel(field_BeerToken__name)]
    
    syntax BeerTokenField ::= "_symbol" [symbol(), klabel(field_BeerToken__symbol)]
    
    syntax BeerTokenField ::= "_owner" [symbol(), klabel(field_BeerToken__owner)]
    
    rule  ( #loc ( BeerToken . _balances ) => 0 )
      
    
    rule  ( #loc ( BeerToken . _totalSupply ) => 1 )
      
    
    rule  ( #loc ( BeerToken . _name ) => 2 )
      
    
    rule  ( #loc ( BeerToken . _symbol ) => 3 )
      
    
    rule  ( #loc ( BeerToken . _owner ) => 4 )
      
    
    syntax Bytes ::= BeerTokenContract "." BeerTokenMethod [function(), symbol(), klabel(method_BeerToken)]
    
    syntax BeerTokenMethod ::= "balanceOf" "(" Int ":" "address" ")" [symbol(), klabel(method_BeerToken_balanceOf_address)]
    
    syntax BeerTokenMethod ::= "burn" "(" Int ":" "uint256" ")" [symbol(), klabel(method_BeerToken_burn_uint256)]
    
    syntax BeerTokenMethod ::= "decimals" "(" ")" [symbol(), klabel(method_BeerToken_decimals_)]
    
    syntax BeerTokenMethod ::= "mint" "(" Int ":" "address" "," Int ":" "uint256" ")" [symbol(), klabel(method_BeerToken_mint_address_uint256)]
    
    syntax BeerTokenMethod ::= "name" "(" ")" [symbol(), klabel(method_BeerToken_name_)]
    
    syntax BeerTokenMethod ::= "standard" "(" ")" [symbol(), klabel(method_BeerToken_standard_)]
    
    syntax BeerTokenMethod ::= "symbol" "(" ")" [symbol(), klabel(method_BeerToken_symbol_)]
    
    syntax BeerTokenMethod ::= "totalSupply" "(" ")" [symbol(), klabel(method_BeerToken_totalSupply_)]
    
    syntax BeerTokenMethod ::= "transfer" "(" Int ":" "address" "," Int ":" "uint256" ")" [symbol(), klabel(method_BeerToken_transfer_address_uint256)]
    
    syntax BeerTokenMethod ::= "transfer" "(" Int ":" "address" "," Int ":" "uint256" "," Bytes ":" "bytes" ")" [symbol(), klabel(method_BeerToken_transfer_address_uint256_bytes)]
    
    rule  ( BeerToken . balanceOf ( V0_account : address ) => #abiCallData ( "balanceOf" , #address ( V0_account ) , .TypedArgs ) )
       ensures #rangeAddress ( V0_account )
      
    
    rule  ( BeerToken . burn ( V0_amount : uint256 ) => #abiCallData ( "burn" , #uint256 ( V0_amount ) , .TypedArgs ) )
       ensures #rangeUInt ( 256 , V0_amount )
      
    
    rule  ( BeerToken . decimals ( ) => #abiCallData ( "decimals" , .TypedArgs ) )
      
    
    rule  ( BeerToken . mint ( V0_account : address , V1_amount : uint256 ) => #abiCallData ( "mint" , #address ( V0_account ) , #uint256 ( V1_amount ) , .TypedArgs ) )
       ensures ( #rangeAddress ( V0_account )
       andBool ( #rangeUInt ( 256 , V1_amount )
               ))
      
    
    rule  ( BeerToken . name ( ) => #abiCallData ( "name" , .TypedArgs ) )
      
    
    rule  ( BeerToken . standard ( ) => #abiCallData ( "standard" , .TypedArgs ) )
      
    
    rule  ( BeerToken . symbol ( ) => #abiCallData ( "symbol" , .TypedArgs ) )
      
    
    rule  ( BeerToken . totalSupply ( ) => #abiCallData ( "totalSupply" , .TypedArgs ) )
      
    
    rule  ( BeerToken . transfer ( V0_to : address , V1_value : uint256 ) => #abiCallData ( "transfer" , #address ( V0_to ) , #uint256 ( V1_value ) , .TypedArgs ) )
       ensures ( #rangeAddress ( V0_to )
       andBool ( #rangeUInt ( 256 , V1_value )
               ))
      
    
    rule  ( BeerToken . transfer ( V0_to : address , V1_value : uint256 , V2_data : bytes ) => #abiCallData ( "transfer" , #address ( V0_to ) , #uint256 ( V1_value ) , #bytes ( V2_data ) , .TypedArgs ) )
       ensures ( #rangeAddress ( V0_to )
       andBool ( #rangeUInt ( 256 , V1_value )
       andBool ( #rangeUInt ( 128 , lengthBytes ( V2_data ) )
               )))
      
    
    rule  ( selector ( "balanceOf(address)" ) => 1889567281 )
      
    
    rule  ( selector ( "burn(uint256)" ) => 1117154408 )
      
    
    rule  ( selector ( "decimals()" ) => 826074471 )
      
    
    rule  ( selector ( "mint(address,uint256)" ) => 1086394137 )
      
    
    rule  ( selector ( "name()" ) => 117300739 )
      
    
    rule  ( selector ( "standard()" ) => 1513848386 )
      
    
    rule  ( selector ( "symbol()" ) => 2514000705 )
      
    
    rule  ( selector ( "totalSupply()" ) => 404098525 )
      
    
    rule  ( selector ( "transfer(address,uint256)" ) => 2835717307 )
      
    
    rule  ( selector ( "transfer(address,uint256,bytes)" ) => 3192257890 )
      

endmodule

module MAIN
    imports public BEERTOKEN-CONTRACT
    
    

endmodule

