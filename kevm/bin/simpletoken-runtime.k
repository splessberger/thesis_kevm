requires "edsl.md"

module SIMPLETOKEN-CONTRACT
    imports public EDSL
    
    syntax Contract ::= SimpleTokenContract
    
    syntax SimpleTokenContract ::= "SimpleToken" [symbol(), klabel(contract_SimpleToken)]
    
    rule  ( #binRuntime ( SimpleToken ) => #parseByteStack ( "0x608060405234801561001057600080fd5b50600436106100935760003560e01c806342966c681161006657806342966c68146101225780635a3b7e421461013e57806370a082311461015c57806395d89b411461018c578063a9059cbb146101aa57610093565b806306fdde031461009857806318160ddd146100b6578063313ce567146100d457806340c10f19146100f2575b600080fd5b6100a06101da565b6040516100ad9190610771565b60405180910390f35b6100be61026c565b6040516100cb91906107ac565b60405180910390f35b6100dc610276565b6040516100e991906107e3565b60405180910390f35b61010c6004803603810190610107919061088d565b61027b565b60405161011991906108e8565b60405180910390f35b61013c60048036038101906101379190610903565b6103be565b005b6101466104a6565b6040516101539190610771565b60405180910390f35b61017660048036038101906101719190610930565b6104e3565b60405161018391906107ac565b60405180910390f35b61019461052b565b6040516101a19190610771565b60405180910390f35b6101c460048036038101906101bf919061088d565b6105bd565b6040516101d191906108e8565b60405180910390f35b6060600280546101e99061098c565b80601f01602080910402602001604051908101604052809291908181526020018280546102159061098c565b80156102625780601f1061023757610100808354040283529160200191610262565b820191906000526020600020905b81548152906001019060200180831161024557829003601f168201915b5050505050905090565b6000600154905090565b600090565b60003373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102d757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610346576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033d90610a09565b60405180910390fd5b81600160008282546103589190610a58565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103ad9190610a58565b925050819055506001905092915050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043b90610afe565b60405180910390fd5b8181036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816001600082825461049b9190610b1e565b925050819055505050565b60606040518060400160405280600681526020017f6572633232330000000000000000000000000000000000000000000000000000815250905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606003805461053a9061098c565b80601f01602080910402602001604051908101604052809291908181526020018280546105669061098c565b80156105b35780601f10610588576101008083540402835291602001916105b3565b820191906000526020600020905b81548152906001019060200180831161059657829003601f168201915b5050505050905090565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106099190610b1e565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106959190610a58565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561071b578082015181840152602081019050610700565b60008484015250505050565b6000601f19601f8301169050919050565b6000610743826106e1565b61074d81856106ec565b935061075d8185602086016106fd565b61076681610727565b840191505092915050565b6000602082019050818103600083015261078b8184610738565b905092915050565b6000819050919050565b6107a681610793565b82525050565b60006020820190506107c1600083018461079d565b92915050565b600060ff82169050919050565b6107dd816107c7565b82525050565b60006020820190506107f860008301846107d4565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061082e82610803565b9050919050565b61083e81610823565b811461084957600080fd5b50565b60008135905061085b81610835565b92915050565b61086a81610793565b811461087557600080fd5b50565b60008135905061088781610861565b92915050565b600080604083850312156108a4576108a36107fe565b5b60006108b28582860161084c565b92505060206108c385828601610878565b9150509250929050565b60008115159050919050565b6108e2816108cd565b82525050565b60006020820190506108fd60008301846108d9565b92915050565b600060208284031215610919576109186107fe565b5b600061092784828501610878565b91505092915050565b600060208284031215610946576109456107fe565b5b60006109548482850161084c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806109a457607f821691505b6020821081036109b7576109b661095d565b5b50919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006109f3601f836106ec565b91506109fe826109bd565b602082019050919050565b60006020820190508181036000830152610a22816109e6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a6382610793565b9150610a6e83610793565b9250828201905080821115610a8657610a85610a29565b5b92915050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000610ae86022836106ec565b9150610af382610a8c565b604082019050919050565b60006020820190508181036000830152610b1781610adb565b9050919050565b6000610b2982610793565b9150610b3483610793565b9250828203905081811115610b4c57610b4b610a29565b5b9291505056fea2646970667358221220072b29e480e53915c04d06afce4c2ba7093176205432c6d7ba501303c5bce03964736f6c63430008130033" ) )
      
    
    syntax Field ::= SimpleTokenField
    
    syntax SimpleTokenField ::= "_balances" [symbol(), klabel(field_SimpleToken__balances)]
    
    syntax SimpleTokenField ::= "_totalSupply" [symbol(), klabel(field_SimpleToken__totalSupply)]
    
    syntax SimpleTokenField ::= "_name" [symbol(), klabel(field_SimpleToken__name)]
    
    syntax SimpleTokenField ::= "_symbol" [symbol(), klabel(field_SimpleToken__symbol)]
    
    syntax SimpleTokenField ::= "_owner" [symbol(), klabel(field_SimpleToken__owner)]
    
    rule  ( #loc ( SimpleToken . _balances ) => 0 )
      
    
    rule  ( #loc ( SimpleToken . _totalSupply ) => 1 )
      
    
    rule  ( #loc ( SimpleToken . _name ) => 2 )
      
    
    rule  ( #loc ( SimpleToken . _symbol ) => 3 )
      
    
    rule  ( #loc ( SimpleToken . _owner ) => 4 )
      
    
    syntax Bytes ::= SimpleTokenContract "." SimpleTokenMethod [function(), symbol(), klabel(method_SimpleToken)]
    
    syntax SimpleTokenMethod ::= "balanceOf" "(" Int ":" "address" ")" [symbol(), klabel(method_SimpleToken_balanceOf_address)]
    
    syntax SimpleTokenMethod ::= "burn" "(" Int ":" "uint256" ")" [symbol(), klabel(method_SimpleToken_burn_uint256)]
    
    syntax SimpleTokenMethod ::= "decimals" "(" ")" [symbol(), klabel(method_SimpleToken_decimals_)]
    
    syntax SimpleTokenMethod ::= "mint" "(" Int ":" "address" "," Int ":" "uint256" ")" [symbol(), klabel(method_SimpleToken_mint_address_uint256)]
    
    syntax SimpleTokenMethod ::= "name" "(" ")" [symbol(), klabel(method_SimpleToken_name_)]
    
    syntax SimpleTokenMethod ::= "standard" "(" ")" [symbol(), klabel(method_SimpleToken_standard_)]
    
    syntax SimpleTokenMethod ::= "symbol" "(" ")" [symbol(), klabel(method_SimpleToken_symbol_)]
    
    syntax SimpleTokenMethod ::= "totalSupply" "(" ")" [symbol(), klabel(method_SimpleToken_totalSupply_)]
    
    syntax SimpleTokenMethod ::= "transfer" "(" Int ":" "address" "," Int ":" "uint256" ")" [symbol(), klabel(method_SimpleToken_transfer_address_uint256)]
    
    rule  ( SimpleToken . balanceOf ( V0_account : address ) => #abiCallData ( "balanceOf" , #address ( V0_account ) , .TypedArgs ) )
       ensures #rangeAddress ( V0_account )
      
    
    rule  ( SimpleToken . burn ( V0_amount : uint256 ) => #abiCallData ( "burn" , #uint256 ( V0_amount ) , .TypedArgs ) )
       ensures #rangeUInt ( 256 , V0_amount )
      
    
    rule  ( SimpleToken . decimals ( ) => #abiCallData ( "decimals" , .TypedArgs ) )
      
    
    rule  ( SimpleToken . mint ( V0_account : address , V1_amount : uint256 ) => #abiCallData ( "mint" , #address ( V0_account ) , #uint256 ( V1_amount ) , .TypedArgs ) )
       ensures ( #rangeAddress ( V0_account )
       andBool ( #rangeUInt ( 256 , V1_amount )
               ))
      
    
    rule  ( SimpleToken . name ( ) => #abiCallData ( "name" , .TypedArgs ) )
      
    
    rule  ( SimpleToken . standard ( ) => #abiCallData ( "standard" , .TypedArgs ) )
      
    
    rule  ( SimpleToken . symbol ( ) => #abiCallData ( "symbol" , .TypedArgs ) )
      
    
    rule  ( SimpleToken . totalSupply ( ) => #abiCallData ( "totalSupply" , .TypedArgs ) )
      
    
    rule  ( SimpleToken . transfer ( V0_to : address , V1_value : uint256 ) => #abiCallData ( "transfer" , #address ( V0_to ) , #uint256 ( V1_value ) , .TypedArgs ) )
       ensures ( #rangeAddress ( V0_to )
       andBool ( #rangeUInt ( 256 , V1_value )
               ))
      
    
    rule  ( selector ( "balanceOf(address)" ) => 1889567281 )
      
    
    rule  ( selector ( "burn(uint256)" ) => 1117154408 )
      
    
    rule  ( selector ( "decimals()" ) => 826074471 )
      
    
    rule  ( selector ( "mint(address,uint256)" ) => 1086394137 )
      
    
    rule  ( selector ( "name()" ) => 117300739 )
      
    
    rule  ( selector ( "standard()" ) => 1513848386 )
      
    
    rule  ( selector ( "symbol()" ) => 2514000705 )
      
    
    rule  ( selector ( "totalSupply()" ) => 404098525 )
      
    
    rule  ( selector ( "transfer(address,uint256)" ) => 2835717307 )
      

endmodule

module SIMPLETOKEN-MAIN
    imports public SIMPLETOKEN-CONTRACT
    
    

endmodule

